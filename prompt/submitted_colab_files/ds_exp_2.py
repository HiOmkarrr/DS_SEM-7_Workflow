# -*- coding: utf-8 -*-
"""DS_EXP_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZQwkRdOPLPUCTW_yp1y6hYkwSZ2G3fwz
"""

import pandas as pd
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""**Generate profiling report**"""

df = pd.read_csv("/content/raw_dataset.csv")

print("\nDataset Shape:", df.shape)
print("\nData Types:\n", df.dtypes)
print("\nMissing Values:\n", df.isnull().sum())
print("\nDuplicate Rows:", df.duplicated().sum())

print("\nNumeric Columns Summary:\n", df.describe())

print("\nCategorical Columns Summary:\n", df.describe(include='object'))

plt.figure(figsize=(10,5))
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title("Missing Values Heatmap")
plt.show()

numeric_cols = df.select_dtypes(include=['int64', 'float64']).columns
for col in numeric_cols:
    plt.figure(figsize=(6,4))
    sns.boxplot(x=df[col])
    plt.title(f"Outlier Detection for {col}")
    plt.show()

for col in numeric_cols:
    plt.figure(figsize=(6,4))
    sns.histplot(df[col], kde=True)
    plt.title(f"Distribution of {col}")
    plt.show()

!pip install pyjanitor

"""**Data Cleaning**"""

import janitor

# Fill missing size with mode
df['size'].fillna(df['size'].mode()[0], inplace=True)

# Remove duplicates
df = df.drop_duplicates()

# Clean categorical columns
categorical_cols = ['category', 'Clothing', 'color', 'material', 'availability', 'return_policy', 'delivery_time']
for col in categorical_cols:
    df[col] = df[col].str.strip().str.title()

print("Cleaned dataset shape:", df.shape)

"""**Feature Engineering**"""

# Calculate discount value
df['discount_value'] = df['original_price'] - df['price']

# Discount flag
df['discount_flag'] = (df['discount_value'] > 0).astype(int)

# Convert scraped_date to datetime and extract weekday
df['scraped_date'] = pd.to_datetime(df['scraped_date'])
df['scraped_weekday'] = df['scraped_date'].dt.day_name()

# Example: time_of_day_flag (mock logic: based on price just for example)
df['time_of_day_flag'] = pd.cut(df['price'],
                                bins=[0, 500, 1000, 2000],
                                labels=['Morning', 'Afternoon', 'Evening'])

df = pd.read_csv("/content/raw_dataset.csv")

!pip install pandera --quiet

"""**Schema Validation**"""

import pandera as pa
from pandera import Column, DataFrameSchema, Check
import pandas as pd

# Define schema
schema = DataFrameSchema({
    "price": Column(int, Check.greater_than_or_equal_to(0), nullable=False),
    "category": Column(str, nullable=False),
    "rating": Column(float, Check.in_range(0, 5), nullable=False),
    "discount_percentage": Column(float, Check.in_range(0, 100), nullable=False),
})

# Validate DataFrame
schema.validate(df)
print("âœ… Schema validation passed!")

df

